{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "prefix": {
      "type": "string",
      "metadata": {
          "description": "identifying prefix for all VM's being build. e.g WeProd would become WeProd-VM-CGF (Max 19 char, no spaces, [A-Za-z0-9]"
      }
    },
    "vNetAddressSpace": {
      "type": "string",
      "metadata": {
          "description": "Network range of the VNET (e.g. 172.16.136.0/22)"
      }
    },
        "vNetAddressSpacev6": {
      "type": "string",
      "metadata": {
          "description": "Network range of the VNET (e.g. 172.16.136.0/22)"
      }
    },
    "subnetCGF": {
      "type": "string",
      "metadata": {
        "description": "Network range of the Subnet containing the NextGen Firewall (e.g. 172.16.136.0/24)"
      }
    },
    
        "subnetCGFv6": {
      "type": "string",
      "metadata": {
        "description": "Network range of the Subnet containing the NextGen Firewall (e.g. 172.16.136.0/24)"
      }
    },
    "subnetRed": {
      "type": "string",
      "metadata": {
        "description": "Network range of the red subnet (e.g. 172.16.137.0/24)"
      },
      "defaultValue": "172.16.137.0/24"
    },
        "subnetRedv6": {
      "type": "string",
      "metadata": {
        "description": "Network range of the red subnet (e.g. 172.16.137.0/24)"
      }
    },
    "subnetGreen": {
      "type": "string",
      "metadata": {
        "description": "Network range of the green subnet (e.g. 172.16.138.0/24)"
      },
      "defaultValue": "172.16.138.0/24"
    },

    "subnetGreenv6": {
      "type": "string",
      "metadata": {
        "description": "Network range of the green subnet (e.g. 172.16.138.0/24)"
      }
    },
    "imageSKU": {
      "type": "string",
      "metadata": {
          "description": "SKU Hourly (PAYG) or BYOL (Bring your own license)"
      },
      "allowedValues": [
          "hourly",
          "byol"
      ],
      "defaultValue": "byol"
    },
    "version": {
      "type": "string",
      "metadata": {
        "description": "Version of the Barracuda CloudGen Firewall to install"
      },
      "allowedValues": [ "latest", "9.0.0051101", "8.3.1008602", "8.3.1008601", "8.3.0035001", "8.2.1016801", "8.2.0019601","8.0.6021101" ],
      "defaultValue": "latest"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2",
      "allowedValues": [ "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D2S_v3", "Standard_D4S_v3", "Standard_D8S_v3", "Standard_F1s", "Standard_F2s", "Standard_F4s", "Standard_F8s", "Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2" ],
      "metadata": {
        "description": "Size of the VMs to be created"
      }
    },
        "enableAccelerated": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "managedIdentities": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no",
      "metadata": {
        "description": "Select to deploy with managed identities"
      }
    },
    "availabiltyType": {
      "type": "string",
      "allowedValues": [
        "Availability Set",
        "Availability Zone"
      ],
      "defaultValue": "Availability Zone",
      "metadata": {
        "description": "Select to deploy with managed identities"
      }
    }
  },
  "variables": {
    "computeApiVersion": "2017-03-30",
    "networkApiVersion": "2019-04-01",

    "imagePublisher": "barracudanetworks",
    "imageOffer": "barracuda-ng-firewall",

    "nsgName": "[concat(parameters('prefix'),'-NSG-CGF')]",
    "avName": "[concat(parameters('prefix'),'-AV-CGF')]",
    "vNetName": "[concat(parameters('prefix'),'-VNET')]",
    "subnetNamecgf": "[concat(parameters('prefix'),'-SUBNET-CGF')]",
    "subnetRefcgf": "[resourceID('Microsoft.Network/virtualNetworks/subnets',variables('vNetName'),variables('subnetNamecgf'))]",
    "subnetNameRed": "[concat(parameters('prefix'),'-SUBNET-RED')]",
    "subnetNameGreen": "[concat(parameters('prefix'),'-SUBNET-GREEN')]",
    "rtableNameRed": "[concat( parameters('prefix'), '-RT-FOR-RED' )]",
    "rtableRefRed": "[resourceID('Microsoft.Network/routeTables',variables('rtableNameRed'))]",
    "rtableNameGreen": "[concat( parameters('prefix'), '-RT-FOR-GREEN' )]",
    "rtableRefGreen": "[resourceID('Microsoft.Network/routeTables',variables('rtableNameGreen'))]",
    "cgfVmName1": "[concat(parameters('prefix'),'-VM-CGF-A')]",
    "cgfVmName2": "[concat(parameters('prefix'),'-VM-CGF-B')]",
    "cgfNicName1": "[concat(variables('cgfVmName1'),'-NIC')]",
    "cgfNicName2": "[concat(variables('cgfVmName2'),'-NIC')]",
    "cgfPIPAddressName1": "[concat(variables('cgfVmName1'),'-PIP')]",
    "cgfPIPAddressName2": "[concat(variables('cgfVmName2'),'-PIP')]",
    "cgfPIPAddressType": "Static",
    "lbPIPAddressNamev4": "[concat(parameters('prefix'),'-CGF-LB-V4-PIP')]",
    "lbPIPAddressNamev6": "[concat(parameters('prefix'),'-CGF-LB-V6-PIP')]",
    "lbName-external": "[concat(parameters('prefix'),'-ELB-CGF')]",
    "lbName-internal": "[concat(parameters('prefix'),'-ILB-CGF')]",
    "lbID-external": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName-external'))]",
    "lbID-internal": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName-internal'))]",
    "lbPIPIDv4": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbPIPAddressNamev4'))]",
    "lbPIPIDv6": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbPIPAddressNamev6'))]",
    "lbFrontEndPoolID-externalv4": "[concat(variables('lbID-external'),'/frontendIPConfigurations/loadBalancerFrontendv4')]",
    "lbFrontEndPoolID-internalv4": "[concat(variables('lbID-internal'),'/frontendIPConfigurations/loadBalancerFrontendv4')]",
    "lbFrontEndPoolID-externalv6": "[concat(variables('lbID-external'),'/frontendIPConfigurations/loadBalancerFrontendv6')]",
    "lbFrontEndPoolID-internalv6": "[concat(variables('lbID-internal'),'/frontendIPConfigurations/loadBalancerFrontendv6')]",
    "lbBackEndPoolID-externalv4": "[concat(variables('lbID-external'),'/backendAddressPools/loadBalancerBackendv4')]",
    "lbBackEndPoolID-internalv4": "[concat(variables('lbID-internal'),'/backendAddressPools/loadBalancerBackendv4')]",
    "lbBackEndPoolID-externalv6": "[concat(variables('lbID-external'),'/backendAddressPools/loadBalancerBackendv6')]",
    "lbBackEndPoolID-internalv6": "[concat(variables('lbID-internal'),'/backendAddressPools/loadBalancerBackendv6')]",
    "lbProbeID-external": "[concat(variables('lbID-external'),'/probes/HAProbe')]",
    "lbProbeID-internal": "[concat(variables('lbID-internal'),'/probes/HAProbe')]",
    "lbIPAddress-internalv4": "[concat( variables( 'cgfSubnetAddrSplit' )[0], '.', variables( 'cgfSubnetAddrSplit' )[1], '.', variables( 'cgfSubnetAddrSplit' )[2], '.', add( int( variables( 'cgfSubnetAddrSplit' )[3]), 4 ))]",
    "lbIPAddress-internalv6": "[concat( variables('cgfSubnetSplitv6')[0], 4 )]",
    "adminUsername": "notused",
    "singleQuotationMark": "'",
    "cgfSubnetSplitv6": "[split( parameters( 'subnetCGFv6' ), '/' )]",
    "cgfVmAddress1v6": "[concat( variables('cgfSubnetSplitv6')[0], 5 )]",
    "cgfVmAddress2v6": "[concat( variables('cgfSubnetSplitv6')[0], 6 )]",
    "cgfNetworkv6": "[concat( variables('cgfSubnetSplitv6')[0], 0 )]",
    "cgfSubnetSplit": "[split( parameters( 'subnetCGF'), '/' )]",
    "cgfSubnetAddrSplit": "[split( variables( 'cgfSubnetSplit' )[0], '.' )]",
    "cgfSubnetMask": "[variables( 'cgfSubnetSplit' )[1]]",
    "cgfSubnetDefaultGw": "[concat( variables( 'cgfSubnetAddrSplit' )[0], '.', variables( 'cgfSubnetAddrSplit' )[1], '.', variables( 'cgfSubnetAddrSplit' )[2], '.', add( int( variables( 'cgfSubnetAddrSplit' )[3]), 1 ))]",
    "cgfVmAddress1": "[concat( variables( 'cgfSubnetAddrSplit' )[0], '.', variables( 'cgfSubnetAddrSplit' )[1], '.', variables( 'cgfSubnetAddrSplit' )[2], '.', add( int( variables( 'cgfSubnetAddrSplit' )[3]), 5 ))]",
    "cgfVmAddress2": "[concat( variables( 'cgfSubnetAddrSplit' )[0], '.', variables( 'cgfSubnetAddrSplit' )[1], '.', variables( 'cgfSubnetAddrSplit' )[2], '.', add( int( variables( 'cgfSubnetAddrSplit' )[3]), 6 ))]",
    "cgfCustomData1": "[Base64(concat( '#!/bin/bash\n\n/opb/cloud-setmip ', variables('cgfVmAddress1'), ' ', variables( 'cgfSubnetMask' ), ' ', variables( 'cgfSubnetDefaultGw' ), '\n', 'echo ', variables('singleQuotationMark'), parameters( 'adminPassword' ), variables('singleQuotationMark'), ' | /opb/create-dha -s S1 -c -o ', variables('cgfVmAddress2'), ' -g ', variables( 'cgfSubnetDefaultGw' ), ' | /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -p BOXNETV6ENABLE -v 1', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s autoconfigurationipv6_IPV601 -p NAME -v IPV601' , '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s autoconfigurationipv6_IPV601 -p IFACE6 -v eth0', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s boxnetv6_ADDI01 -p BIND -v y' , '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s boxnetv6_ADDI01 -p DEV6 -v eth0', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s boxnetv6_ADDI01 -p HAIPV6 -v', variables ('cgfVmAddress2v6'),' ', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s boxnetv6_ADDI01 -p IPV6 -v' , variables ('cgfVmAddress1v6'), ' ', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s boxnetv6_ADDI01 -p MASKV6 -v 64 ','| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s boxnetv6_ADDI01 -p NAME -v ADDI01 ','| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s boxnetv6_ADDI01 -p OSPF -v n ', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s boxnetv6_ADDI01 -p PING6 -v y ','| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601 -p DEV6 -v eth0 ', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601 -p IPV6NET -v', variables('cgfNetworkv6'), '/64', ' | /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601 -p NAME -v IPV601', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601 -p OSPF -v n ', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601_vsips_1613772787 -p ADDLABELV6 -v ip6serv1', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601_vsips_1613772787 -p IPV6 -v', variables ('cgfVmAddress1v6'),' ','| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601_vsips_1613772787 -p NAME -v 1613772787', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601_vsips_1613772787 -p PING6 -v y','| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601_vsips_1613773202 -p ADDLABELV6 -v ip6serv2', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601_vsips_1613773202 -p IPV6 -v', variables ('cgfVmAddress2v6'),' ','| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601_vsips_1613773202 -p NAME -v 1613773202', '| /opb/editconf -f /opt/phion/config/configroot/boxnet.conf -s vaddnetv6_IPV601_vsips_1613773202 -p PING6 -v y','\n'))]",
    "cgfCustomData2": "[Base64('\n')]",
    "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
     "identity": {
        "type": "SystemAssigned"
     },
     "availabiltySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('avName'))]"
        }
  },
  "resources": [
     {
      "condition": "[equals(parameters('managedIdentities'),'yes')]",
      "copy": {
        "name": "IdLoop",
        "count": 2
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "name": "[guid(concat(variables(concat('cgfVmName',copyIndex(1))),resourceGroup().id, deployment().name))]",
      "apiVersion": "2017-09-01",
      "properties": {
        "roleDefinitionId": "[variables('Contributor')]",
        "principalId": "[reference(variables(concat('cgfVmName',copyIndex(1))), '2018-06-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables(concat('cgfVmName',copyIndex(1))))]"
      ]
    },
        {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowAnyInbound",
            "properties": {
              "description": "Allow Any",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "1-65535",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAnyOutbound",
            "properties": {
              "description": "Allow Any",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "1-65535",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('nsgName')]",
        "[variables('rtableRefRed')]",
        "[variables('rtableRefGreen')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vNetAddressSpace')]",
            "[parameters('vNetAddressSpacev6')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetNamecgf')]",
            "properties": {
              "addressPrefixes": [
                "[parameters('subnetcgf')]",
                "[parameters('subnetCgfv6')]"
              ],
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          },
          {
            "name": "[variables('subnetNameRed')]",
            "properties": {
              "addressPrefixes": [
                "[parameters('subnetRed')]",
                "[parameters('subnetRedv6')]"
              ],
              "routeTable": {
                "id": "[variables('rtableRefRed')]"
              }
            }
          },
          {
            "name": "[variables('subnetNameGreen')]",
            "properties": {
              "addressPrefixes": [
                "[parameters('subnetGreen')]",
                "[parameters('subnetGreenv6')]"
              ],
              "routeTable": {
                "id": "[variables('rtableRefGreen')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables( 'networkApiVersion' )]",
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('rtableNameRed')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "routes": [
          {
            "name": "to-Internet",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('lbIPAddress-internalv4')]"
            }
          },
                    {
            "name": "to-InternetIPv6",
            "properties": {
              "addressPrefix": "::/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('lbIPAddress-internalv6')]"
            }
          },
          {
            "name": "to-Green",
            "properties": {
              "addressPrefix": "[parameters('subnetGreen')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('lbIPAddress-internalv4')]"
            }
          },
          {
            "name": "to-GreenIPv6",
            "properties": {
              "addressPrefix": "[parameters('subnetGreenv6')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('lbIPAddress-internalv6')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables( 'networkApiVersion' )]",
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('rtableNameGreen')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "routes": [
          {
            "name": "to-Internet",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('lbIPAddress-internalv4')]"
            }
          },
          {
            "name": "to-Red",
            "properties": {
              "addressPrefix": "[parameters('subnetRed')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('lbIPAddress-internalv4')]"
            }
          },
                    {
            "name": "to-InternetIPv6",
            "properties": {
              "addressPrefix": "::/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('lbIPAddress-internalv6')]"
            }
          },
          {
            "name": "to-RedIPv6",
            "properties": {
              "addressPrefix": "[parameters('subnetRedv6')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('lbIPAddress-internalv6')]"
            }
          }
        ]
      }
    },
        {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbPIPAddressNamev4')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('cgfPIPAddressType')]"
      }
    },
    {
      "condition": "[equals(parameters('availabiltyType'),'Availability Set')]",
      "apiVersion": "[variables('computeApiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('avName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 5
      },
      "sku": {
        "name": "Aligned"
      }
    },

        {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbPIPAddressNamev6')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv6",
        "publicIPAllocationMethod": "Static"
      }
    },
   {
        "apiVersion": "[variables('networkApiVersion')]",
        "name": "[variables('lbName-external')]",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard"
        },
        "comments": "External LoadBalancer for the Barracuda CloudGen Firewall F cluster",
        "tags": {
          "displayName": "CGFLB-External"
        },
        "dependsOn": [
          "[variables('lbPIPAddressNamev4')]",
          "[variables('lbPIPAddressNamev6')]" 
         ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "loadBalancerFrontendv4",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('lbPIPIDv4')]"
                }
              }
            },
            {
              "name": "loadBalancerFrontendv6",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('lbPIPIDv6')]"
                 }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "loadBalancerBackendv4"
            },
            {
              "name": "loadBalancerBackendv6"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "IPSEC-IKE",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('lbFrontEndPoolID-externalv4')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbBackEndPoolID-externalv4')]"
                },
                "protocol": "Udp",
                "frontendPort": 500,
                "backendPort": 500,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID-external')]"
                }
              }
            },
            {
              "name": "IPSEC-NATT",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('lbFrontEndPoolID-externalv4')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbBackEndPoolID-externalv4')]"
                },
                "protocol": "Udp",
                "frontendPort": 4500,
                "backendPort": 4500,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID-external')]"
                }
              }
            },
            {
              "name": "TINA-UDP",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('lbFrontEndPoolID-externalv4')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbBackEndPoolID-externalv4')]"
                },
                "protocol": "Udp",
                "frontendPort": 691,
                "backendPort": 691,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID-external')]"
                }
              }
            },
            {
              "name": "TINA-TCP",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('lbFrontEndPoolID-externalv4')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbBackEndPoolID-externalv4')]"
                },
                "protocol": "Tcp",
                "frontendPort": 691,
                "backendPort": 691,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID-external')]"
                }
              }
            },
            {
              "name": "TINA-UDPv6",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('lbFrontEndPoolID-externalv6')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbBackEndPoolID-externalv6')]"
                },
                "protocol": "Udp",
                "frontendPort": 691,
                "backendPort": 691,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID-external')]"
                }
              }
            },
            {
              "name": "TINA-TCPv6",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('lbFrontEndPoolID-externalv6')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbBackEndPoolID-externalv6')]"
                },
                "protocol": "Tcp",
                "frontendPort": 691,
                "backendPort": 691,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID-external')]"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "HAProbe",
              "properties": {
                "protocol": "Tcp",
                "port": 691,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ]
        }
      },
     {
        "apiVersion": "[variables('networkApiVersion')]",
        "name": "[variables('lbName-internal')]",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard"
        },
        "dependsOn": [
           "[variables('vNetName')]"
        ],
        "comments": "Internal LoadBalancer for the Barracuda Next Gen Firewall F cluster",
        "tags": {
          "displayName": "CGFLB-Internal"
        },
        "properties": {
          "frontendIPConfigurations": [
            {
               "properties": {
                "subnet": {
                  "id": "[variables('subnetRefCGF')]"
                },
                "privateIPAddress": "[variables('lbIPAddress-internalv4')]",
                "privateIPAllocationMethod": "Static"
              },
              "name": "loadBalancerFrontendv4"
            },
             {
               "properties": {
                 "subnet": {
                  "id": "[variables('subnetRefCGF')]"
                },
                "privateIPAddress": "[variables('lbIPAddress-internalv6')]",
                "privateIPAllocationMethod": "Static",
                "privateIPAddressVersion": "IPv6"
              },
              "name": "loadBalancerFrontendv6"
            }
          ],
          "backendAddressPools": [
            {
              "name": "loadBalancerBackendv4"
            },
            {
              "name": "loadBalancerBackendv6"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "lbrulev4",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('lbFrontEndPoolID-internalv4')]"
                },
                "frontendPort": 0,
                "backendPort": 0,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 15,
                "protocol": "All",
                "loadDistribution": "Default",
                "backendAddressPool": {
                  "id": "[variables('lbBackEndPoolID-internalv4')]"
                },
                "probe": {
                  "id": "[variables('lbProbeID-internal')]"
                }
              }
            },
            {
              "name": "lbrulev6",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('lbFrontEndPoolID-internalv6')]"
                },
                "frontendPort": 0,
                "backendPort": 0,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 15,
                "protocol": "All",
                "loadDistribution": "Default",
                "backendAddressPool": {
                  "id": "[variables('lbBackEndPoolID-internalv6')]"
                },
                "probe": {
                  "id": "[variables('lbProbeID-internal')]"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "HAProbe",
              "properties": {
                "protocol": "Tcp",
                "port": 65000,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ]
        }
      },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('cgfPIPAddressName1'),'-V4')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "comments": "Public IPv4 address used by CGF-A",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "[variables('cgfPIPAddressType')]"
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('cgfPIPAddressName2'),'-V4')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "comments": "Public IPv4 address used by CGF-B",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "[variables('cgfPIPAddressType')]"
      }
    },
        {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('cgfPIPAddressName1'),'-V6')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "comments": "Public IPv6 address used by CGF-A",
      "properties": {
        "publicIPAddressVersion": "IPv6",
        "publicIPAllocationMethod": "Static"
      }
    },
        {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('cgfPIPAddressName2'),'-V6')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "comments": "Public IPv4 address used by CGF-B",
      "properties": {
        "publicIPAddressVersion": "IPv6",
         "publicIPAllocationMethod": "Static"
      }
    },
     {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables(concat('cgfNicName',copyIndex(1)))]",
      "location": "[resourceGroup().location]",
            "copy": {
        "name": "nicLoop",
        "count": 2
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables(concat('cgfPIPAddressName',copyIndex(1))),'-V4'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables(concat('cgfPIPAddressName',copyIndex(1))),'-V6'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]",
        "[variables('lbID-external')]",
        "[variables('lbID-internal')]"
      ],
      "comments": "NIC used by CGF-A, creates one IPv4 config and one IPv6 config",
      "properties": {
        "enableIPForwarding": true,
        "enableAcceleratedNetworking": "[if(equals(parameters('enableAccelerated'), 'yes'), 'true', 'false')]",
        "ipConfigurations": [
          {
            "name": "ipconfigv4",
            "properties": {
              "privateIPAddressVersion": "IPv4",
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables(concat('cgfVmAddress',copyIndex(1)))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables(concat('cgfPIPAddressName',copyIndex(1))),'-V4'))]"
              },
              "subnet": {
                "id": "[variables('subnetRefcgf')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbBackEndPoolID-externalv4')]"
                },
                      {
                  "id": "[variables('lbBackEndPoolID-internalv4')]"
                }
               ]
            }
          },
          {
            "name": "ipconfigv6",
            "properties": {
              "privateIPAddressVersion": "IPv6",
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables(concat('cgfVmAddress',copyIndex(1),'v6'))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables(concat('cgfPIPAddressName',copyIndex(1))),'-V6'))]"
              },
              "subnet": {
                "id": "[variables('subnetRefcgf')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbBackEndPoolID-internalv6')]"
                },
                      {
                  "id": "[variables('lbBackEndPoolID-externalv6')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('computeApiVersion')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": 2
      },
      
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables(concat('cgfVmName',copyIndex(1)))]",
      "location": "[resourceGroup().location]",
      "plan": {
        "name": "[parameters('imageSKU')]",
        "Product": "[variables('imageOffer')]",
        "Publisher": "[variables('imagePublisher')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables(concat('cgfNicName',copyIndex(1))))]",
        "[resourceId('Microsoft.Compute/availabilitySets',variables('avName'))]"
      ],
      "zones" : "[if(equals(parameters('availabiltyType'),'Availability Zone'),array(copyIndex(1)),json('null'))]",
      "comments": "Creates CGF instance",
      "identity": "[if(equals(parameters('managedIdentities'),'yes'),variables('identity'),json('null'))]",
      "properties": {
        "availabilitySet" : "[if(equals(parameters('availabiltyType'),'Availability Set'),variables('availabiltySet'),json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables(concat('cgfVmName',copyIndex(1)))]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[variables(concat('cgfCustomData',copyIndex(1)))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "[parameters('version')]"
          },
          "osDisk": {
            "name": "[concat(variables(concat('cgfVmName',copyIndex(1))),'-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables(concat('cgfNicName',copyIndex(1))))]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      }
    }
    
],
  "outputs": {
    "CGF-A": {
      "type": "string",
      "value": "[reference (concat(variables('cgfPIPAddressName1'),'-V4')).ipAddress]" 
    },
    "CGF-B": {
      "type": "string",
      "value": "[reference(concat (variables('cgfPIPAddressName2'),'-V4')).ipAddress]"
    },
    "CGF-LB": {
      "type": "string",
      "value": "[reference(variables('lbPIPAddressNamev4')).ipAddress]"
    }
  }
}