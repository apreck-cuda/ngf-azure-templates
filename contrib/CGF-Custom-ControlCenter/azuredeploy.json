{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "identifying prefix for all VM's being build. e.g WeProd would become WeProd-VM-CGF (Max 19 char, no spaces, [A-Za-z0-9]"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the Resource Group of the VNET (e.g. CUDA-RG-VNET)"
      }
    },
    "vNetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VNET (e.g. CUDA-VNET)"
      }
    },
    "subnetNameCC": {
      "type": "string",
      "metadata": {
        "description": "Name of the Subnet containing the CloudGen Firewall (e.g. CUDA-SUBNET-CGF)"
      }
    },
    "subnetCC": {
      "type": "string",
      "metadata": {
        "description": "Network range of the Subnet containing the CloudGen Firewall (e.g. 172.16.136.0/24)"
      }
    },
    "ipAddressCC": {
      "type": "string",
      "metadata": {
        "description": "OPTIONAL IP Address of the CloudGen Firewall (e.g. 172.16.136.0/24). If not filled we will use the first private IP in the subnet"
      },
      "defaultValue": ""
    },
    "version": {
      "type": "string",
      "metadata": {
        "description": "Version of the Barracuda CloudGen Firewall to install"
      },
	    "allowedValues": [ "latest", "9.0.0051101", "8.3.1008602", "8.3.1008601", "8.3.0035001", "8.2.1016801", "8.2.0019601","8.0.6021101" ],
      "defaultValue": "latest"
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the VMs to be created"
      },
      "allowedValues": [ "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D2S_v3", "Standard_D4S_v3", "Standard_D8S_v3", "Standard_F1s", "Standard_F2s", "Standard_F4s", "Standard_F8s", "Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2" ],
      "defaultValue": "Standard_DS1_v2"
    }
  },
  "variables": {
    "computeApiVersion": "2017-03-30",
    "networkApiVersion": "2017-08-01",

    "imagePublisher": "barracudanetworks",
    "imageOffer": "barracuda-ng-cc",
    "imageSKU": "byol",
    "nsgName": "[concat(parameters('prefix'),'-NSG-CC')]",
    "vnetID": "[resourceId(parameters('vNetResourceGroup'),'Microsoft.Network/virtualNetworks',parameters('vNetName'))]",
    "subnetRefCGF": "[concat(variables('vnetID'),'/subnets/',parameters('subnetNameCC'))]",

    "cgfVmName": "[concat(parameters('prefix'),'-VM-CC')]",
    "cgfNicName": "[concat(variables('cgfVmName'),'-NIC')]",
    "cgfPIPAddressName": "[concat(variables('cgfVmName'),'-PIP')]",
    "cgfPIPAddressType": "Static",

    "adminUsername": "notused",

    "cgfSubnetSplit": "[split( parameters( 'subnetCC' ), '/' )]",
    "cgfSubnetAddrSplit": "[split( variables( 'cgfSubnetSplit' )[0], '.' )]",
    "cgfSubnetMask": "[variables( 'cgfSubnetSplit' )[1]]",
    "cgfSubnetDefaultGw": "[concat( variables( 'cgfSubnetAddrSplit' )[0], '.', variables( 'cgfSubnetAddrSplit' )[1], '.', variables( 'cgfSubnetAddrSplit' )[2], '.', add( int( variables( 'cgfSubnetAddrSplit' )[3]), 1 ))]",
    "cgfVmAddressCalc": "[concat( variables( 'cgfSubnetAddrSplit' )[0], '.', variables( 'cgfSubnetAddrSplit' )[1], '.', variables( 'cgfSubnetAddrSplit' )[2], '.', add( int( variables( 'cgfSubnetAddrSplit' )[3]), 10 ))]",
    "cgfVmAddress": "[if(empty('ipAddressCGF'), variables('cgfVmAddressCalc'), parameters('ipAddressCC'))]",
    "ccCustomData": "[Base64(concat( '#!/bin/bash\n\n/opb/cloud-setmip ', parameters('ipAddressCC'), ' ', variables( 'cgfSubnetMask' ), ' ', variables( 'cgfSubnetDefaultGw' ), '\n'))]",
    "defaultRouteTableName": "[concat( 'route-via-', variables( 'cgfVmName' ), '-', resourceGroup().name )]"
  },
  "resources": [
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowAnyInbound",
            "properties": {
              "description": "Allow Any",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "1-65535",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAnyOutbound",
            "properties": {
              "description": "Allow Any",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "1-65535",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables( 'networkApiVersion' )]",
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('defaultRouteTableName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "routes": [
          {
            "name": "[variables( 'defaultRouteTableName' )]",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('cgfVmAddress')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('cgfPIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('cgfPIPAddressType')]"
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('cgfNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('cgfPIPAddressName'))]"
      ],
      "properties": {
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables( 'cgfVmAddress' )]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('cgfPIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRefCGF')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('computeApiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('cgfVmName')]",
      "location": "[resourceGroup().location]",
      "plan": {
        "name": "[variables('imageSKU')]",
        "Product": "[variables('imageOffer')]",
        "Publisher": "[variables('imagePublisher')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('cgfNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('cgfVmName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
           "customData": "[variables('ccCustomData')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "[parameters('version')]"
          },
          "osDisk": {
            "name": "[concat(variables('cgfVmName'),'-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('cgfNicName'))]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "ipaddress": {
      "type": "string",
      "value": "[reference(variables('cgfPIPAddressName')).ipAddress]"
    }
  }
}